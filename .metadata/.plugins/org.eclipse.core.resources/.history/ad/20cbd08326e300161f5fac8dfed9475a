#include "Arduino.h"
#include "PlugDataAccess.h"

int myPins[] =
{ A0, A1, A2, A3, A4, A5, 6, 7, 8, 9 };
PlugDataAccess dataAccess;

byte MAC[] =
{ 0xDE, 0xAD, 0xAD, 0xEF, 0xFE, 0xED };

char currentConfig[255];

void setup()
{
	Serial.begin(9600);

	Serial.println(F("Initializing DataAccess.."));
	dataAccess.begin(MAC);
	Serial.println(F("Initializing.."));

	for (int i = 0; i < 10; i++)
	{
		pinMode(myPins[i], OUTPUT);           // set pin to input
	}

	/*	delay(500);
	 for (int i = 0; i < 10; i += 2)
	 {
	 Serial.print(F("Checking Channel: "));
	 Serial.println(i / 2);
	 Serial.println("activating..");
	 digitalWrite(myPins[i], HIGH);
	 delay(500);
	 Serial.println("waiting..");
	 digitalWrite(myPins[i], LOW);
	 delay(500);
	 Serial.println("deactivating..");
	 digitalWrite(myPins[i + 1], HIGH);
	 delay(500);
	 Serial.println("waiting..");
	 digitalWrite(myPins[i + 1], LOW);
	 delay(500);
	 }*/
}

void loop()
{

	char *response = dataAccess.getChannelConfig(currentConfig);
	if (!dataAccess.Success)
	{
		Serial.println(F("HTTP Error"));
		return;
	}
	Serial.print(F("currentConfig: "));
	Serial.println(currentConfig);
	Serial.print(F("response: "));
	Serial.println(response);
	if (!dataAccess.IsResponseEmpty && !strstr(currentConfig, response))
	{
		Serial.println("schalten..");
		int a, b, c, d, e;
		sscanf(response, "%d:%d:%d:%d:%d", &a, &b, &c, &d, &e);

		int ca, cb, cc, cd, ce;
		sscanf(response, "%d:%d:%d:%d:%d", &a, &b, &c, &d, &e);
		if (a != ca)
		{
			if (ca == 1)
				ActivateChannel(0);
			else
				ActivateChannel(1);
		}
		if (b != cb)
		{
			if (ca == 1)
				ActivateChannel(2);
			else
				ActivateChannel(3);
		}
		if (c != cc)
		{
			if (ca == 1)
				ActivateChannel(4);
			else
				ActivateChannel(5);
		}
		if (d != cd)
		{
			if (ca == 1)
				ActivateChannel(6);
			else
				ActivateChannel(7);
		}
		if (e != ce)
		{
			if (ca == 1)
				ActivateChannel(8);
			else
				ActivateChannel(9);
		}

		strcpy(currentConfig, response);
	}

	delay(100);
}

void ActivateChannel(int channel)
{

	digitalWrite(myPins[channel], HIGH);
	delay(500);
	digitalWrite(myPins[channel], LOW);
}
